def get_report_visits_yandex_metric(arguments) -> str:
    """
    –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç—á—ë—Ç–∞ –ø–æ –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏ —Å–∞–π—Ç–∞ –∏–∑ –Ø–Ω–¥–µ–∫—Å.–ú–µ—Ç—Ä–∏–∫–∏ (Reports API).

    –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å –∫ API, –ø–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ –≤–∏–∑–∏—Ç–∞–º, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º,
    –ø—Ä–æ—Å–º–æ—Ç—Ä–∞–º –∏ –∫–∞—á–µ—Å—Ç–≤—É —Ç—Ä–∞—Ñ–∏–∫–∞, –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –∏—Ö –≤ —Ç–∞–±–ª–∏—Ü—É –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    –≤ —Ñ–æ—Ä–º–∞—Ç–µ CSV-—Å—Ç—Ä–æ–∫–∏.

    Args:
        ids (str): ID —Å—á—ë—Ç—á–∏–∫–∞ –Ø–Ω–¥–µ–∫—Å.–ú–µ—Ç—Ä–∏–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "44147844" –¥–ª—è –¥–µ–º–æ-—Å—á—ë—Ç—á–∏–∫–∞).
        date1 (str) : –ù–∞—á–∞–ª—å–Ω–∞—è –¥–∞—Ç–∞ –ø–µ—Ä–∏–æ–¥–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ YYYY-MM-DD.
        date2 (str): –ö–æ–Ω–µ—á–Ω–∞—è –¥–∞—Ç–∞ –ø–µ—Ä–∏–æ–¥–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ YYYY-MM-DD.

    Returns:
        str: –î–∞–Ω–Ω—ã–µ –æ—Ç—á—ë—Ç–∞ –≤ –≤–∏–¥–µ CSV-—Å—Ç—Ä–æ–∫–∏ (—Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å ‚Äî –∑–∞–ø—è—Ç–∞—è, –∫–æ–¥–∏—Ä–æ–≤–∫–∞ UTF-8).
             –í–∫–ª—é—á–∞–µ—Ç —Ä–∞–∑—Ä–µ–∑—ã –ø–æ –¥–∞—Ç–µ, –∏—Å—Ç–æ—á–Ω–∏–∫—É —Ç—Ä–∞—Ñ–∏–∫–∞, —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º –∏ —Å—Ç—Ä–∞–Ω–∞–º.
    """

    import requests
    import pandas as pd
    import io

    # –¥–æ–ø—É—Å—Ç–∏–º—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –≤ arguments
    allowed_params = ["ids", "date1", "date2"]

    # –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä ids –µ—Å—Ç—å
    valid_params = [p for p in allowed_params if p in arguments]
    if "ids" not in valid_params:
        raise Exception("–ù–µ –Ω–∞–π–¥–µ–Ω –æ—Å–Ω–æ–≤–Ω–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä -> \"ids\"")

    # –±–∞–∑–æ–≤—ã–π URL –¥–ª—è Reports API
    url = "https://api-metrika.yandex.net/stat/v1/data"

    # —Ñ–æ—Ä–º–∏—Ä—É–µ–º –±–∞–∑–æ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞
    params = {
        "ids": arguments["ids"],  # ID —Å—á—ë—Ç—á–∏–∫–∞
        "metrics": ",".join([     # —Å–ø–∏—Å–æ–∫ –º–µ—Ç—Ä–∏–∫ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏
            "ym:s:visits",                  # –≤–∏–∑–∏—Ç—ã
            "ym:s:users",                   # –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
            "ym:s:pageviews",               # –ø—Ä–æ—Å–º–æ—Ç—Ä—ã —Å—Ç—Ä–∞–Ω–∏—Ü
            "ym:s:bounceRate",              # –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å –æ—Ç–∫–∞–∑–æ–≤
            "ym:s:avgVisitDurationSeconds", # —Å—Ä–µ–¥–Ω—è—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤–∏–∑–∏—Ç–∞
            "ym:s:pageDepth",               # –≥–ª—É–±–∏–Ω–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
            "ym:s:percentNewVisitors"       # –¥–æ–ª—è –Ω–æ–≤—ã—Ö –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π
        ]),
        "dimensions": "ym:s:date,ym:s:trafficSource,ym:s:deviceCategory,ym:s:regionCountry",
        "limit": 10000   # –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 100, –º–∞–∫—Å–∏–º—É–º 100000)
    }

    # –¥–æ–±–∞–≤–ª—è–µ–º –≤ params –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø–µ—Ä–µ–¥–∞–Ω—ã –≤ arguments
    for p in valid_params:
        if p != "ids":  # ids —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω –≤—ã—à–µ
            params[p] = arguments[p]

    # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º GET-–∑–∞–ø—Ä–æ—Å –∫ API
    r = requests.get(url, params=params)
    r.raise_for_status()  # –ø—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å

    # –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –æ—Ç–≤–µ—Ç –≤ JSON
    data = r.json()

    # –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º JSON –≤ DataFrame
    df = pd.DataFrame([
        {
            "date": row["dimensions"][0]["name"],          # –¥–∞—Ç–∞
            "trafficSource": row["dimensions"][1]["name"], # –∏—Å—Ç–æ—á–Ω–∏–∫ —Ç—Ä–∞—Ñ–∏–∫–∞
            "device": row["dimensions"][2]["name"],        # —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ
            "country": row["dimensions"][3]["name"],       # —Å—Ç—Ä–∞–Ω–∞
            "visits": row["metrics"][0],                   # –≤–∏–∑–∏—Ç—ã
            "users": row["metrics"][1],                    # –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
            "pageviews": row["metrics"][2],                # –ø—Ä–æ—Å–º–æ—Ç—Ä—ã —Å—Ç—Ä–∞–Ω–∏—Ü
            "bounceRate": row["metrics"][3],               # –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å –æ—Ç–∫–∞–∑–æ–≤
            "avgDurationSec": row["metrics"][4],           # —Å—Ä–µ–¥–Ω—è—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤–∏–∑–∏—Ç–∞
            "pageDepth": row["metrics"][5],                # –≥–ª—É–±–∏–Ω–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
            "percentNewVisitors": row["metrics"][6],       # –¥–æ–ª—è –Ω–æ–≤—ã—Ö –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π
        }
        for row in data.get("data", [])  # –±–µ–∑–æ–ø–∞—Å–Ω–µ–µ —á–µ—Ä–µ–∑ get
    ])

    # —Å–æ—Ö—Ä–∞–Ω—è–µ–º DataFrame –≤ —Å—Ç—Ä–æ–∫—É CSV
    csv_buffer = io.StringIO()
    df.to_csv(csv_buffer, index=False, encoding="utf-8-sig")
    return csv_buffer.getvalue()


# üîπ –ü—Ä–∏–º–µ—Ä –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–∏
csv_data = get_report_visits_yandex_metric({
    "ids": "44147844",
   "date1": "2025-01-01",
#    "date2": "2025-10-21"
})
print(csv_data[:1000])  # –≤—ã–≤–æ–¥–∏–º –ø–µ—Ä–≤—ã–µ 200 —Å–∏–º–≤–æ–ª–æ–≤ CSV
